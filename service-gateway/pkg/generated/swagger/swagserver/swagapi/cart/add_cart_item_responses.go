// Code generated by go-swagger; DO NOT EDIT.

package cart

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodel "github.com/1ambda/domain-driven-design-go/service-gateway/pkg/generated/swagger/swagmodel"
)

// AddCartItemOKCode is the HTTP code returned for type AddCartItemOK
const AddCartItemOKCode int = 200

/*AddCartItemOK OK

swagger:response addCartItemOK
*/
type AddCartItemOK struct {

	/*
	  In: Body
	*/
	Payload []*swagmodel.AddCartItemOKBodyItems `json:"body,omitempty"`
}

// NewAddCartItemOK creates AddCartItemOK with default headers values
func NewAddCartItemOK() *AddCartItemOK {

	return &AddCartItemOK{}
}

// WithPayload adds the payload to the add cart item o k response
func (o *AddCartItemOK) WithPayload(payload []*swagmodel.AddCartItemOKBodyItems) *AddCartItemOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add cart item o k response
func (o *AddCartItemOK) SetPayload(payload []*swagmodel.AddCartItemOKBodyItems) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddCartItemOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*swagmodel.AddCartItemOKBodyItems, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*AddCartItemDefault error

swagger:response addCartItemDefault
*/
type AddCartItemDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *swagmodel.Exception `json:"body,omitempty"`
}

// NewAddCartItemDefault creates AddCartItemDefault with default headers values
func NewAddCartItemDefault(code int) *AddCartItemDefault {
	if code <= 0 {
		code = 500
	}

	return &AddCartItemDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add cart item default response
func (o *AddCartItemDefault) WithStatusCode(code int) *AddCartItemDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add cart item default response
func (o *AddCartItemDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add cart item default response
func (o *AddCartItemDefault) WithPayload(payload *swagmodel.Exception) *AddCartItemDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add cart item default response
func (o *AddCartItemDefault) SetPayload(payload *swagmodel.Exception) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddCartItemDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
