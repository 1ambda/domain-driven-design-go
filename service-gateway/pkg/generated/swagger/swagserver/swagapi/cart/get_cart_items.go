// Code generated by go-swagger; DO NOT EDIT.

package cart

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetCartItemsHandlerFunc turns a function with the right signature into a get cart items handler
type GetCartItemsHandlerFunc func(GetCartItemsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCartItemsHandlerFunc) Handle(params GetCartItemsParams) middleware.Responder {
	return fn(params)
}

// GetCartItemsHandler interface for that can handle valid get cart items params
type GetCartItemsHandler interface {
	Handle(GetCartItemsParams) middleware.Responder
}

// NewGetCartItems creates a new http.Handler for the get cart items operation
func NewGetCartItems(ctx *middleware.Context, handler GetCartItemsHandler) *GetCartItems {
	return &GetCartItems{Context: ctx, Handler: handler}
}

/*GetCartItems swagger:route GET /cart cart getCartItems

GetCartItems get cart items API

*/
type GetCartItems struct {
	Context *middleware.Context
	Handler GetCartItemsHandler
}

func (o *GetCartItems) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetCartItemsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
